@use "~pe7-icon/dist/scss/pe-icon-7-stroke.scss";
@use "mixins/inputs";
@use "mixins/vendor-prefixes";
@use "variables" as base-variables;

.form-control::-moz-placeholder {
  @include inputs.placeholder(base-variables.$medium-gray, 1);
}

.form-control:-moz-placeholder {
  @include inputs.placeholder(base-variables.$medium-gray, 1);
}

.form-control::-webkit-input-placeholder {
  @include inputs.placeholder(base-variables.$medium-gray, 1);
}

.form-control:-ms-input-placeholder {
  @include inputs.placeholder(base-variables.$medium-gray, 1);
}

.form-control {
  box-sizing: border-box;
  height: 33.2px;
  border: 0.6px solid rgba(37, 38, 95, 0.2);
  border-radius: 2px;
  background-color: #F5F9FC; //  background-color: $white-bg;
  //  border: 1px solid $light-gray;
  //  border-radius: $border-radius-base;
  color: #565656;
  @include vendor-prefixes.box-shadow(none);
  &:focus {
    background-color: base-variables.$white-bg;
    border: 1px solid base-variables.$medium-dark-gray;
    @include vendor-prefixes.box-shadow(none);
    outline: 0 !important;
    color: #333333;
  }
  .has-success &,
  .has-error &,
  .has-success &:focus,
  .has-error &:focus {
    border-color: base-variables.$light-gray;
    @include vendor-prefixes.box-shadow(none);
  }
  .has-success & {
    color: base-variables.$success-color;
  }
  .has-success &:focus {
    border-color: base-variables.$success-color;
  }
  .has-error & {
    color: base-variables.$danger-color;
  }
  .has-error &:focus {
    border-color: base-variables.$danger-color;
  }
  &+.form-control-feedback {
    border-radius: base-variables.$border-radius-large;
    font-size: pe-icon-7-stroke.$font-size-base;
    margin-top: -7px;
    position: absolute;
    right: 10px;
    top: 50%;
    vertical-align: middle;
  }
  .open & {
    border-radius: base-variables.$border-radius-base base-variables.$border-radius-base 0 0;
    border-bottom-color: transparent;
  }
}

.input-lg {
  height: 55px;
  padding: base-variables.$padding-large-vertical base-variables.$padding-large-horizontal;
}

.has-error {
  .form-control-feedback {
    color: base-variables.$danger-color;
  }
}

.has-success {
  .form-control-feedback {
    color: base-variables.$success-color
  }
}

.input-group-addon {
  background-color: base-variables.$white-color;
  border: 1px solid base-variables.$light-gray;
  border-radius: base-variables.$border-radius-base;
  .has-success &,
  .has-error & {
    background-color: base-variables.$white-color;
    border: 1px solid base-variables.$light-gray;
  }
  .has-error .form-control:focus+& {
    border-color: base-variables.$danger-color;
    color: base-variables.$danger-color;
  }
  .has-success .form-control:focus+& {
    border-color: base-variables.$success-color;
    color: base-variables.$success-color;
  }
  .form-control:focus+&,
  .form-control:focus~& {
    background-color: base-variables.$white-color;
    border-color: base-variables.$dark-gray;
  }
}

.input-group .form-control:first-child,
.input-group-addon:first-child,
.input-group-btn:first-child>.dropdown-toggle,
.input-group-btn:last-child>.btn:not(:last-child):not(.dropdown-toggle) {
  border-right: 0 none;
}

.input-group .form-control:last-child,
.input-group-addon:last-child,
.input-group-btn:last-child>.dropdown-toggle,
.input-group-btn:first-child>.btn:not(:first-child) {
  border-left: 0 none;
}

.form-control[disabled],
.form-control[readonly],
fieldset[disabled] .form-control {
  background-color: base-variables.$smoke-bg;
  color: base-variables.$default-color;
  cursor: not-allowed;
}

.input-group-btn .btn {
  border-width: base-variables.$border-thin;
  padding: base-variables.$padding-round-vertical base-variables.$padding-base-horizontal;
}

.input-group-btn .btn-default:not(.btn-fill) {
  border-color: base-variables.$medium-gray;
}

.input-group-btn:last-child>.btn {
  margin-left: 0;
}

.input-group-focus .input-group-addon {
  border-color: base-variables.$dark-gray;
}